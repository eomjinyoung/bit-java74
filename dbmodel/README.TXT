[DB 모델링]
모델링(Modeling)? 
=> 생각하는 바를 글과 그림으로 표현하는 것.
=> 예) UML(객체 지향 설계를 글과 그림으로 표현한 것) 

렌더링(Rendering)?
=> 코드를 분석하여 화면으로 표현하는 것.
=> 예) HTML을 분석하여 웹 브라우저 화면에 그리는 것.
=> 렌더링 소프트웨어: WebKit(HTML 렌더러)

1. 테이블 식별
2. Primary Key 결정
- 데이터를 구분할 때 사용할 한 개 이상의 컬럼들.
- 중복되어서는 안된다.
- 주키가 다른 테이블에서 사용되면 변경할 수 없다.
- 보통 여러 컬럼을 묶어서 PK로 사용하기 보다는 임의의 일련 번호 컬럼을 만들어서 
  주키로 사용한다.
  

* 정규화
=> 데이터 중복을 없애기 위한 설계 기법
=> 데이터가 중복되면 데이터 신뢰성(무결성)이 떨어진다.
     예) 이력서를 여러 컴퓨터와 웹 하드와 폴더에 중복 저장하면
          이력서 관리가 힘들다. 
     예) 은행에서 고객 정보를 이중으로 관리하면 고객 관리가 힘들다.
          대출부서 따로 고객관리, 일반 입/출금 부서에서 고객정보를 따로 관리,
          카드부서에서 따로 고객 관리를 할 경우,
          만약 대출부서에서 고객 정보를 바꿀 때 다른 부서의 고객 정보는 유효하지 않는
          정보가 된다.
 

3. 제1정규화
- 중복 데이터나 중복 컬럼이 있다면 별도의 테이블로 분리하고,
  이전 테이블과 부모-작식 관계 맺는다.
4. 제2정규화
- Primary Key 컬럼이 두 개 이상일 경우 수행한다.
- 일반 컬럼은 반드시 PK 컬럼 모두에 종속되어야 한다.
  아니라면 별도의 테이블로 분리하고, 부모-자식 관계를 맺는다.
5. 제3정규화
- PK에 종속되지 않고 오히려 다른 일반 컬럼에 종속되는 컬럼은
  별도의 테이블로 분리하고, 부모-자식 관계를 맺는다.

6. 논리 모델을 물리 모델로 변경한다.
- 테이블 이름과 컬럼 이름을 한글에서 영어로 바꾼다. 
- DBMS에 예약된 키워드의 사용은 피하라!

7. 도메인 정의 및 적용.
- 컬럼들을 유사 데이터 단위로 묶어서 컬럼의 타입을 정의한다.
- 장점: 컬럼의 타입을 변경할 때 일괄적으로 바꿀 수 있다.

8. Not Null 여부 지정.
- 필수 입력 컬럼과 선택 입력 컬럼을 지정한다.

9. default 값 지정
- 컬럼 중에 값이 입력되지 않았을 때 기본으로 가져야할 값이 있다면 지정한다.

10. Unique 컬럼 식별
- 비록 PK 컬럼은 아니지만 중복되어서는 안되는 컬럼.
- PK로 사용할 수 있는 컬럼 ---> 후보키(Candidate Key)

11. 인덱스 컬럼 식별
- 조회 조건으로 자주 사용되는 컬럼을 식별하여 별도의 색인 테이블을 생성한다.
- 검색 속도가 빨라진다. ---> select 속도가 빠르다.
- 단점: 입력,변경,삭제할 때 마다 인덱스 테이블을 개정해야 하기 때문에
          입력,변경,삭제 속도가 느려진다.
- 가능한 입력,변경,삭제가 자주 발생하는 테이블 보다 조회를 자주하는 테이블에 대해 적용하라.

12. 포워드 엔지니어링(Forward Engineering)
- 모델링 결과 -----> SQL 추출
- 참고
  리버스 엔지니어링(Reverse Engineering)
  => SQL -----> 모델링 추출 


* 테이블 간 관계
1 : 1   ---->   --|--------|--
1 : *   ----->  --|-------0K--
1 : 1..*  ----> --|--------K--
0..1 : *  ----> --|0------0K--
0..1 : 1..*  --> --|0------K---

* 다 대 다 관계의 해소
- 다 대 다 관계는 DBMS 테이블로 표현할 수 없다.
- 관계를 표현하는 별도의 테이블을 만들어 일 대 다의 관계로 바꾼다.

* 외부키(Foreign Key)
- 다른 테이블의 존재하는 PK 값을 저장하는 컬럼.

* 식별 관계(identifying)와 비 식별 관계(non-identifying)
- 식별 관계: 외부키이면서 주키이기도 함. FK == PK
- 비식별 관계: 외부키이다. 주키는 아니다. 일반 컬럼이다.  FK != PK











